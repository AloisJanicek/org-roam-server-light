#+TITLE: Readme

* org-roam-server-light

This projects attempts to move [[https://github.com/org-roam/org-roam-server][org-roam-server]] functionality from emacs into external python server process due to subjective poor elisp / emacs performance when computing graph data for larger amount of org-roam files and serving them to web browser.

** Warning
My first time touching python more deeply then Hello World!

** Installation
#+BEGIN_EXAMPLE
 git clone https://github.com/AloisJanicek/org-roam-server-light.git
#+END_EXAMPLE

Add elisp code into your emacs config

** Elisp code
#+BEGIN_SRC emacs-lisp
(require 'f)

(defun aj-org-roam-server-light-update-last-buffer ()
  "Update `aj-org-roam-server-light-last-roam-buffer'."
  (let ((buf (or (buffer-base-buffer (current-buffer)) (current-buffer))))
    (when (org-roam--org-roam-file-p
           (buffer-file-name buf))
      (setq aj-org-roam-server-light-last-roam-buffer (car (last
                                                            (split-string
                                                             (org-roam--path-to-slug
                                                              (buffer-name buf))
                                                             "/"))))
      (f-write-text aj-org-roam-server-light-last-roam-buffer
                    'utf-8
                    (format "/tmp/%s" (symbol-name 'aj-org-roam-server-light-last-roam-buffer))))))

(defun aj-org-roam-server-light-find-file-hook-function ()
  "If the current visited file is an `org-roam` file, update the current buffer."
  (when (org-roam--org-roam-file-p)
    (add-hook 'post-command-hook #'aj-org-roam-server-light-update-last-buffer nil t)
    (aj-org-roam-server-light-update-last-buffer)))

(define-minor-mode org-roam-server-light-mode
    "Start the http server and serve org-roam files."
    :lighter ""
    :global t
    :init-value nil
    (let ((process-title "org-roam-server-light"))
      (if (not (ignore-errors org-roam-server-light-mode))
          (progn
            (when (get-process process-title)
              (delete-process "org-roam-server-light"))
            (remove-hook 'find-file-hook #'aj-org-roam-server-light-find-file-hook-function nil)
            (dolist (buf (org-roam--get-roam-buffers))
              (with-current-buffer buf
                (remove-hook 'post-command-hook #'aj-org-roam-server-light-update-last-buffer t))))
        (progn
          (let ((default-directory "/path/to/your/org-roam-server-light"))
            (start-process-shell-command process-title "org-roam-server-light-output-buffer" "python main.py"))
          (add-hook 'find-file-hook #'aj-org-roam-server-light-find-file-hook-function nil nil)
          (f-write-text org-roam-directory
                        'utf-8
                        (format "/tmp/%s" (symbol-name 'org-roam-directory)))))))
#+END_SRC

Execute =(org-roam-server-light-mode 'toggle)= to toggle =org-roam-server-light-mode= or just enable it by ~M-x~

** Roadmap and functionality overview
*** COMPLETED +Serve all kinds of static assets+
*** COMPLETED +Keep track of current buffer+
by writing its name into file and reading it by external server process
performs better then fetching value of emacs variable via emacsclient every second and it is easier to program then Unix socket or D-Bus
*** COMPLETED +Start and stop external python server process when you enable or disable org-roam-server-light-mode in emacs+
*** COMPLETED +Actually construct required JSON for vis-network in Python+
*** TODO Handle file previews
*** TODO Handle cite links stuff

** Credits
Client side code, assets and some elisp copied as they are from [[https://github.com/org-roam/org-roam-server][org-roam-server]]
python code copied and expanded from [[https://github.com/aklatzke/python-webserver-part-2][aklatzke/python-webserver-part-2]]
